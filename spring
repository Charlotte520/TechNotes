1. spring cloud：微服务
eureka：服务注册/发现。
feign：rpc框架，建立网络连接，构建请求，发送。实现：动态代理。
ribbon：LB。默认round robin。
hystrix：隔离、熔断、降级。一个服务卡住导致其他服务不可用，雪崩。a调用b、c、d，每个被调用的服务对应一个线程池。b挂掉，对其的请求直接返回，熔断。或在故障db中记录消息，等b恢复后再redo，降级。
zuul：网关。统一降级、限流、认证授权、安全。

1) eureka
如何存储服务注册的机器ip:port:纯内存，ConcurrentHashMap<serviceName, Map<instanceId,Lease<InstanceInfo>>>。InstanceInfo包括ip、port、hostname，lease维护最近一次heartbeat时间。4core8G机器的纯内存操作，可几百/s。
服务发现的频率：client默认每隔30s发送一个请求，获取变更。每隔30s发送一次heartbeat。
如何获取注册列表：如何避免并发冲突？多级缓存。先读ReadOnlyCacheMap，若没有读ReadWriteCacheMap，还没有读内存。更新时，先更新内存，并删掉ReadWriteCacheMap。30s后，后台线程发现ReadWriteCacheMap空，则清空ReadOnlyCacheMap。
上千台服务器时的访问压力：若100个服务，20台机器，共2k个服务实例，每个实例每分钟请求4次，共8k次。每秒130次，加上其他操作，约200-500次/s。日请求量：8k*60*24=1kw。
p2p：每个instance包括所有注册表，接收到注册/下线请求时，同步转发到其他实例（异步，最终一致）。=》注册表超过单机极限？分片；每个节点主从热备；
